#!/usr/bin/env node

var fs = require('fs');
var path = require('path');
var findup = require('findup-sync');
var pkginfo = require('pkginfo');
var targz = require('tar.gz');
var request = require('request');
var prompt = require('prompt');
var actions = require('../lib');

var program = require('commander');
var colors = require('colors');

program
    .version('0.0.1')
    .option('-c, --config <path>', 'set config path.')
    .option('--host <host>', 'Saskavi deployment host to push to')
    .option('--firebase <url>', 'use the specified firebase to orchestrate RPC calls');

program
    .command('run [module]')
    .description('run the module locally.  module defaults to module found in current directory or parent folders')
    .action(run);

program
    .command('init')
    .description('initialize a new saskavi module')
    .action(init);

program
    .command('deploy [module]')
    .description('deploy module to saskavi service')
    .action(deploy);

program
    .command('kill')
    .description('kills a running saskavi deployment')
    .action(kill);

program.parse(process.argv);



function run(modulePath){
    console.log("saskavi run".bold.green);
    modulePath =  findModulePath(modulePath);

    // make sure we got the right file and teh module resolves
    var moduleFile = require.resolve(modulePath);
    var moduleFileRelative = path.relative(process.cwd(), moduleFile);
    console.log("    exporting functions from".yellow, moduleFileRelative.italic);

    // load package.json to lookup configuration values
    var packageJSON = path.join(modulePath, 'package.json');
    var moduleInfo = JSON.parse(fs.readFileSync(packageJSON));

    // set firebase url, will use the first one of the following that is set:
    //  1. command line --firebase argument
    //  2. SASKAVI_FIREBASE_ROOT environment variable
    //  3. firebase.root value in packag.json
    var fbRoot = program.firebase
        || process.env['SASKAVI_FIREBASE_ROOT']
            || moduleInfo.saskavi.firebase;

    console.log("    running on firebase root:".yellow, fbRoot);

    // require the module, and bind it saskavi style
    var module = require(modulePath);
    actions.bind(fbRoot, module);
}


function deploy(modulePath){
    console.log("saskavi deploy".bold.green);
    modulePath =  findModulePath(modulePath);

    var moduleFile = require.resolve(modulePath);
    var moduleFileRelative = path.relative(process.cwd(), moduleFile);

    var pushHost = program.host
        || process.env["SASKAVI_PUSH_HOST"]
        || "0.saskavi.com";

    actions.push(moduleFileRelative, pushHost);
}

function kill(modulePath) {
    console.log("saskavi kill".bold.green);

    var pushHost = program.host
        || process.env["SASKAVI_PUSH_HOST"]
        || "0.saskavi.com";

    modulePath =  findModulePath(modulePath);

    var moduleFile = require.resolve(modulePath);
    var moduleFileRelative = path.relative(process.cwd(), moduleFile);

    actions.kill(modulePath, pushHost);
}


function init(){
    console.log("saskavi init".bold.green);
    var packageFile = path.join(process.cwd(), "package.json");
    if (!fs.existsSync(packageFile))
        return console.log("No package.json found, make sure you've run npm init first, or you're in the same directory as the module.".red);

    var pkg = JSON.parse(fs.readFileSync(packageFile));

    var checkForFirebase = function() {
        var fn = path.join(process.cwd(), "firebase.json");
        if (fs.existsSync(fn)) {
            var obj = JSON.parse(fs.readFileSync(fn));
            return obj.firebase;
        }

        return null;
    };

    var updatePackage = function(withObj) {
        for (var k in withObj) {
            pkg[k] = withObj[k];
        }

        fs.writeFileSync(packageFile, JSON.stringify(pkg, null, "  "));
    };

    console.log("    Using module:".yellow, pkg.name);

    // check if firebase.json exists here, if it does pull out the firebase property from it
    var defaultFirebase = checkForFirebase();
    prompt.message = "";
    prompt.start();
    prompt.get({
        properties: {
            firebase: {
                description: "Application firebase root:".magenta
            }
        }}, function(err, res) {
            updatePackage({saskavi: res});
        });
}



function findModulePath(modulePath){
    if (modulePath === undefined){
        modulePath = path.dirname(findup('package.json'));
    }
    else{
        modulePath = path.resolve(modulePath);
    }
    return modulePath;
}

// vim: set expandtab:
